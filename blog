#!/usr/bin/env ruby

require 'thor'

def edit(file)
  system "gedit #{file}" or system %{cmd /c "notepad #{file}"}
end
class Edit < Thor
  include Thor::Actions
  desc 'post', 'edits a post'
  def post
    #_posts = Dir['source/posts/*']
    #for post in _posts
    posts = []
    Dir.entries('source/posts').select {|f| !File.directory? f}.each do |file|
      posts.push file.sub('.html.markdown', '').gsub('-', ' ')
    end
    puts posts
    name = ask 'What is the name of the post you would like to edit?', limited_to: posts
    edit 'source/posts/' + name.gsub(' ', '-') + '.html.markdown'
    if yes? 'Would you like to publish your post?'
      MyCLI.new.invoke :publish
    end
  end
end

class New < Thor
  include Thor::Actions
  desc "post", "makes a new post"
  def post
    name = ask 'What is the name of the new post?'
    clean_name = "source/posts/#{name.gsub(/[^0-9a-z ]/i, '').squeeze(' ').gsub(/\s/, '-').downcase}.html.markdown"
    authors = []
    getMoreAuthors = true
    while getMoreAuthors
      authors.push ask 'What is the name of the author?'
      getMoreAuthors = yes? 'Is there another author?'
    end
    if authors.length == 1
      author_string = "author: #{authors.first}"
    else
      author_string = "authors: #{authors.join(', ')}"
    end
    tags = []
    if yes? 'does this post have any tags?'
      getMoreTags = true
      while getMoreTags
        tags.push ask 'What is the tag?'
        getMoreTags = yes? 'Is there another tag?'
      end
    end
    create_file clean_name do
"---
title: #{name}
date: #{Time.now}
#{author_string}
tags: #{tags.join(', ')}
---"
    end
    edit clean_name
    if yes? 'Would you like to publish your post?'
      MyCLI.new.invoke :publish
    end
  end
end

class MyCLI < Thor
  include Thor::Actions
  desc 'edit SUBCOMMAND', 'some parent command'
  subcommand 'edit', Edit
  desc "new SUBCOMMAND", "Some Parent Command"
  subcommand "new", New
  desc 'publish', 'uploads the code to GitHub, to the real website'
  def publish
    `git checkout source | grep error`
    `git add -A | grep error`
    puts `git status | grep 'new file:'`
    puts `git status | grep 'modified:'`
    puts `git status | grep 'deleted:'`
    commit_message = ask 'What changes have you made to the website?'
    `git commit -am "#{commit_message}"`
    `git pull origin source`
    if yes? 'Are you sure you want to publish these changes?'
      `git push origin source`
      `rake publish -s`
      `wget feedburner.google.com/fb/a/pingSubmit\?bloglink\=http%3A%2F%2Ffeeds.feedburner.com%2Fteam1432 -O /dev/null`
    end
  end
end

MyCLI.start(ARGV)
